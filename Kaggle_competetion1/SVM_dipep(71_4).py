# -*- coding: utf-8 -*-
"""Sameeksha data_SVM_acc71.42.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZNGjd4i2Nb3fNsEUh6yuugoOZa6FwVn_

TEAM MEMBERS:-

Priyanka Boral(MT19127)


Reecha Kumari Giri(MT19134)


Akanksha Dewangan(MT19049)

Loading data of dipeptide

data is loaded from pickle file of dipeptide matrix
"""

import pandas as pd
df_train_dipep = pd.read_csv('Dipeptide_Train.csv')
df_test_dipep = pd.read_csv('Dipeptide_Test.csv')
X = pd.read_pickle('dipeptide_matrix')

"""Label encoding of target code

Feature selection : select k best using F-ANNOVA

model :  svm classifier
"""

new_test=pd.read_pickle('dipeptide_test_matrix')
del df_train_dipep['ID'] 
test_labels=df_test_dipep['ID']
del df_test_dipep['ID']
from sklearn import preprocessing  
label_encoder = preprocessing.LabelEncoder() 
df_train_dipep['Type']= label_encoder.fit_transform(df_train_dipep['Type']) 
label_mapping = dict(zip(label_encoder.classes_, label_encoder.transform(label_encoder.classes_)))
y = df_train_dipep['Type']
from sklearn.feature_selection import SelectKBest,f_classif
sel_f = SelectKBest(score_func=f_classif, k=215)
X_new = sel_f.fit_transform(X, y)
X_new_test=sel_f.transform(new_test)
from sklearn import svm
svc = svm.SVC(kernel='rbf', C=3,gamma='scale', class_weight='balanced').fit(X_new, y)
from sklearn.model_selection import cross_val_score
scores = cross_val_score(svc, X_new, y, cv=10)
#use this for svm
print(sum(scores)/len(scores))
svc = svm.SVC(kernel='rbf', C=5,gamma='scale', class_weight='balanced').fit(X_new, y)
# prediction column of test data
y_pred=svc.predict(X_new_test)

"""Label encoding of test data from{0,1} to {1,-1}"""

y_pred_temp=[]
for i in y_pred:
  if i==0:
    y_pred_temp.append(1)
  else:
    y_pred_temp.append(-1)

"""Save output csv for loading in kaggle."""

#copying to sample file
data_res=pd.DataFrame()
data_res['ID']=test_labels
data_res['Lable']=y_pred_temp
data_res.to_csv (r'newnew4_svm_output.csv', index = False, header=True)